* Prucka window management implementation
** Major behavior to emulate
   - outer borders of the central widget are not moveable.
   - windows can't be moved inside central window by dragging title
     bar.
   - Resizing windows acts like a splitter bar.
** Other behavior
   - Log window always expands to full width of central widget
   - Odd window location selection behavior
     - when new window is selected in menu, horizontal or vertical
       line is shown on screen, left mouse click opens window in
       quadrant selected.
   - Closing window expands other horizontally aligned windows
   - Uncertain if can open Review2 without Review1 and vice versa
   - Can't close Real-time
     - but no Realtime if review study or no acquisition
       - no acquisition case is handled by Navigator
       - if acquisition changed during study, no effect
	 - maybe should disable that option during study???
** UI implementation of behavior
   Simplest way to implement is via menu options.  Examples:
   - Disable Review2 if no 
* Simplified window management
** rationale
   - Prucka behavior is very MS Windows dependent and would require
     using platform-specific QT window handling code to implement.
     Workarounds trapping mouse events, etc. are very difficult to do.
   - Implementation of Prucka behavior is very difficult, perhaps
     impossible, certainly slowing program development.
   - Prucka-like screen layouts can be manually simulated using an MDI
     setup and then can be saved for reuse.
   - Prucka window management is not standard windows GUI behavior and
     does not fulfil the standard of "least surprise."
** Arguments for Prucka behavior
   - Non-Prucka behavior weakens the simulation verisimilitude.  Why
     include all the other awkward Prucka elements and not this one?
   - Opening new windows such as Review2 requires manually laying out
     of the windows.  Methods to open and rearrange the windows in a
     default way could obviate this.  Saved window layouts could be
     used instead of just opening and closing windows.
   - Specific window behavior is still awkward.  Should the Realtime
     window be closeable?  It isn't in the Prucka.  Can you have a
     Review 2 and not a Review 1?  Not sure about that.  
** Recommendations
   - Recorder subwindows are MDI subwindows, thus use an MDI layout model.
   - In addition to Tile and Cascade, have an Organize Windows menu
     option that lays out the windows Prucka style.  When a new window
     is opened, have option to use the Organize Windows function or
     not.  (AutoOrganizeWindows option?)
   - Windows layouts are saved in study configurations, and when new
     study is loaded, the default study configuration window layout
     will be used.
* Multihead displays
** TwoReviewWindow option
   The basic option is using one or two review windows.  The number of
   physical screens is not important.  Multihead systems act like one
   big screen, thus saving the 2 screens, one on each screen, just
   saves the coordinates and should just work.  Maximizing on 2
   screens may not work right, will need to experiments with a 2
   screen system to be sure.  
** Recorder window layout versus subwindow layout
   Recorder window positions are stored in the EPSimulator.conf file.
   Subwindow layouts are stored in the config.dat files.  The
   rationale is that the user will keep his his Navigator and Recorder
   windows maximized or not, and won't want them changing sizes each
   time a new study is loaded.  The relative positioning of the
   windows will change from study to study.  Downside of this is that
   changing main window size will mess up subwindow locations.
** TODO 
   recorder window currently does store subwindow locations in
   EPSimulator.conf.  This is only the last configuration when the
   window is closed.  Need to work on study configuration data.
* Qt-creator issues
** gdb problem
   Solution: downloaded later version of gdb from here:
   ftp://ftp.qt.nokia.com/misc/gdb/
* Study vs Patient
** Study contains the initial state of the study
   This includes study specific items, such as date, study number,
   study state, etc.  When a study starts, there is also a patient who
   has an initial state.  This includes unchangeables like sex and
   date of birth but also things that can change from study to study
   like disease state, and also initial vital signs, rhythm, etc.  All
   this is present during each study.
** Different study situations
*** Pre-registered patient, from scratch
    
*** New Patient, from scratch
    User fills in patient demographics, selects patient template
    (defaults to '<default>').  

* Screen size
  Need to convert pixel distances to time intervals.  Screen
  resolution in pixels is known to program, can get from QDesktop
  class.  Sweep speed is set by program, in mm/sec, eg. 100 mm/sec.
  We need to know pixels/mm.  This depends on screen size.  Prucka
  must set this manually, based on monitor sizes.  Wrong screen size
  will make the sweep timing and interval measurements wrong, but not
  grossly so.  Could set default horizontal screen size to 17", but
  have it user modifiable.  Need either measurement or dpi for screen.
  
* Library dependency problems
** Windows settings problem
   git versions up to breaking point:
   edb0e3cbcac33fd872ac5bf7ba88ba4484ac2405
   9bfb5d3f3c97ac802e8887c6958b384b14fde7f2
   7cda2eaa79a4a77d7f1963d9ec2417938ec9ff62

   Last functioning git version is 9bfb5d3f3c....

   Problem is Study contains StudyConfiguration.  StudyConfiguration
   contains lots of data relating to Recorder: channels, amplifier,
   Window settings, etc.  Study just needs to have a
   StudyConfiguration name to start out with.  Recorder needs to
   contain the StudyConfiguration; Navigator also uses it, but
   Navigator references Recorder so that is ok.  Study itself can't
   reference a StudyConfiguration based in Recorder, because Recorder
   has to reference Study, thus circular references....
** Solution
   Eliminate Study library, incorporate it into Recorder library.
